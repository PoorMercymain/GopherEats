// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: dishes/dishes.proto

package dishesv1

import (
	reflect "reflect"
	sync "sync"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IngredientV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Unit string `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *IngredientV1) Reset() {
	*x = IngredientV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngredientV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngredientV1) ProtoMessage() {}

func (x *IngredientV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngredientV1.ProtoReflect.Descriptor instead.
func (*IngredientV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{0}
}

func (x *IngredientV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IngredientV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IngredientV1) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type CreateIngredientRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Unit string `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *CreateIngredientRequestV1) Reset() {
	*x = CreateIngredientRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIngredientRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngredientRequestV1) ProtoMessage() {}

func (x *CreateIngredientRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngredientRequestV1.ProtoReflect.Descriptor instead.
func (*CreateIngredientRequestV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{1}
}

func (x *CreateIngredientRequestV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateIngredientRequestV1) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type UpdateIngredientRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Unit string `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
}

func (x *UpdateIngredientRequestV1) Reset() {
	*x = UpdateIngredientRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIngredientRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIngredientRequestV1) ProtoMessage() {}

func (x *UpdateIngredientRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIngredientRequestV1.ProtoReflect.Descriptor instead.
func (*UpdateIngredientRequestV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateIngredientRequestV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateIngredientRequestV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateIngredientRequestV1) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

type IngredientIdV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IngredientIdV1) Reset() {
	*x = IngredientIdV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngredientIdV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngredientIdV1) ProtoMessage() {}

func (x *IngredientIdV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngredientIdV1.ProtoReflect.Descriptor instead.
func (*IngredientIdV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{3}
}

func (x *IngredientIdV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DishIngredientV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Unit string `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	Qty  uint64 `protobuf:"varint,4,opt,name=qty,proto3" json:"qty,omitempty"`
}

func (x *DishIngredientV1) Reset() {
	*x = DishIngredientV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishIngredientV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishIngredientV1) ProtoMessage() {}

func (x *DishIngredientV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishIngredientV1.ProtoReflect.Descriptor instead.
func (*DishIngredientV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{4}
}

func (x *DishIngredientV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DishIngredientV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DishIngredientV1) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *DishIngredientV1) GetQty() uint64 {
	if x != nil {
		return x.Qty
	}
	return 0
}

type DishV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string              `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Ingredients []*DishIngredientV1 `protobuf:"bytes,4,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *DishV1) Reset() {
	*x = DishV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishV1) ProtoMessage() {}

func (x *DishV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishV1.ProtoReflect.Descriptor instead.
func (*DishV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{5}
}

func (x *DishV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DishV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DishV1) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DishV1) GetIngredients() []*DishIngredientV1 {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type CreateDishRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Ingredients []*DishIngredientV1 `protobuf:"bytes,3,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *CreateDishRequestV1) Reset() {
	*x = CreateDishRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDishRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDishRequestV1) ProtoMessage() {}

func (x *CreateDishRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDishRequestV1.ProtoReflect.Descriptor instead.
func (*CreateDishRequestV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{6}
}

func (x *CreateDishRequestV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDishRequestV1) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateDishRequestV1) GetIngredients() []*DishIngredientV1 {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type UpdateDishRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string              `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Ingredients []*DishIngredientV1 `protobuf:"bytes,4,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *UpdateDishRequestV1) Reset() {
	*x = UpdateDishRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDishRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDishRequestV1) ProtoMessage() {}

func (x *UpdateDishRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDishRequestV1.ProtoReflect.Descriptor instead.
func (*UpdateDishRequestV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDishRequestV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDishRequestV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDishRequestV1) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateDishRequestV1) GetIngredients() []*DishIngredientV1 {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type DishIdV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DishIdV1) Reset() {
	*x = DishIdV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishIdV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishIdV1) ProtoMessage() {}

func (x *DishIdV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishIdV1.ProtoReflect.Descriptor instead.
func (*DishIdV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{8}
}

func (x *DishIdV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BundleV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price uint64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *BundleV1) Reset() {
	*x = BundleV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleV1) ProtoMessage() {}

func (x *BundleV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleV1.ProtoReflect.Descriptor instead.
func (*BundleV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{9}
}

func (x *BundleV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BundleV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BundleV1) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type CreateBundleRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price uint64 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *CreateBundleRequestV1) Reset() {
	*x = CreateBundleRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBundleRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBundleRequestV1) ProtoMessage() {}

func (x *CreateBundleRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBundleRequestV1.ProtoReflect.Descriptor instead.
func (*CreateBundleRequestV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{10}
}

func (x *CreateBundleRequestV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBundleRequestV1) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type UpdateBundleRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price uint64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *UpdateBundleRequestV1) Reset() {
	*x = UpdateBundleRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBundleRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBundleRequestV1) ProtoMessage() {}

func (x *UpdateBundleRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBundleRequestV1.ProtoReflect.Descriptor instead.
func (*UpdateBundleRequestV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateBundleRequestV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBundleRequestV1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateBundleRequestV1) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type BundleIdV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BundleIdV1) Reset() {
	*x = BundleIdV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleIdV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleIdV1) ProtoMessage() {}

func (x *BundleIdV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleIdV1.ProtoReflect.Descriptor instead.
func (*BundleIdV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{12}
}

func (x *BundleIdV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BundleWeeklyDishV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeekNumber uint64 `protobuf:"varint,1,opt,name=week_number,json=weekNumber,proto3" json:"week_number,omitempty"`
	BundleId   uint64 `protobuf:"varint,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	DishId     uint64 `protobuf:"varint,3,opt,name=dish_id,json=dishId,proto3" json:"dish_id,omitempty"`
}

func (x *BundleWeeklyDishV1) Reset() {
	*x = BundleWeeklyDishV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleWeeklyDishV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleWeeklyDishV1) ProtoMessage() {}

func (x *BundleWeeklyDishV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BundleWeeklyDishV1.ProtoReflect.Descriptor instead.
func (*BundleWeeklyDishV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{13}
}

func (x *BundleWeeklyDishV1) GetWeekNumber() uint64 {
	if x != nil {
		return x.WeekNumber
	}
	return 0
}

func (x *BundleWeeklyDishV1) GetBundleId() uint64 {
	if x != nil {
		return x.BundleId
	}
	return 0
}

func (x *BundleWeeklyDishV1) GetDishId() uint64 {
	if x != nil {
		return x.DishId
	}
	return 0
}

type GetBundleWeeklyDishesRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeekNumber uint64 `protobuf:"varint,1,opt,name=week_number,json=weekNumber,proto3" json:"week_number,omitempty"`
	BundleId   uint64 `protobuf:"varint,2,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
}

func (x *GetBundleWeeklyDishesRequestV1) Reset() {
	*x = GetBundleWeeklyDishesRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBundleWeeklyDishesRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBundleWeeklyDishesRequestV1) ProtoMessage() {}

func (x *GetBundleWeeklyDishesRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBundleWeeklyDishesRequestV1.ProtoReflect.Descriptor instead.
func (*GetBundleWeeklyDishesRequestV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{14}
}

func (x *GetBundleWeeklyDishesRequestV1) GetWeekNumber() uint64 {
	if x != nil {
		return x.WeekNumber
	}
	return 0
}

func (x *GetBundleWeeklyDishesRequestV1) GetBundleId() uint64 {
	if x != nil {
		return x.BundleId
	}
	return 0
}

type ResourceV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ResourceV1) Reset() {
	*x = ResourceV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceV1) ProtoMessage() {}

func (x *ResourceV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceV1.ProtoReflect.Descriptor instead.
func (*ResourceV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{15}
}

func (x *ResourceV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResourceV1) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ResourceV1) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ResourceV1) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CreateResourceRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CreateResourceRequestV1) Reset() {
	*x = CreateResourceRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResourceRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResourceRequestV1) ProtoMessage() {}

func (x *CreateResourceRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResourceRequestV1.ProtoReflect.Descriptor instead.
func (*CreateResourceRequestV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{16}
}

func (x *CreateResourceRequestV1) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateResourceRequestV1) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *CreateResourceRequestV1) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type UpdateResourceRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *UpdateResourceRequestV1) Reset() {
	*x = UpdateResourceRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResourceRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResourceRequestV1) ProtoMessage() {}

func (x *UpdateResourceRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResourceRequestV1.ProtoReflect.Descriptor instead.
func (*UpdateResourceRequestV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateResourceRequestV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateResourceRequestV1) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateResourceRequestV1) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UpdateResourceRequestV1) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ResourceIdV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ResourceIdV1) Reset() {
	*x = ResourceIdV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceIdV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceIdV1) ProtoMessage() {}

func (x *ResourceIdV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceIdV1.ProtoReflect.Descriptor instead.
func (*ResourceIdV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{18}
}

func (x *ResourceIdV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResourceResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ResourceResponseV1) Reset() {
	*x = ResourceResponseV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceResponseV1) ProtoMessage() {}

func (x *ResourceResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceResponseV1.ProtoReflect.Descriptor instead.
func (*ResourceResponseV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{19}
}

func (x *ResourceResponseV1) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResourceResponseV1) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ResourceResponseV1) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DishResourceRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DishId     uint64 `protobuf:"varint,1,opt,name=dish_id,json=dishId,proto3" json:"dish_id,omitempty"`
	ResourceId uint64 `protobuf:"varint,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *DishResourceRequestV1) Reset() {
	*x = DishResourceRequestV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dishes_dishes_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DishResourceRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DishResourceRequestV1) ProtoMessage() {}

func (x *DishResourceRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_dishes_dishes_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DishResourceRequestV1.ProtoReflect.Descriptor instead.
func (*DishResourceRequestV1) Descriptor() ([]byte, []int) {
	return file_dishes_dishes_proto_rawDescGZIP(), []int{20}
}

func (x *DishResourceRequestV1) GetDishId() uint64 {
	if x != nil {
		return x.DishId
	}
	return 0
}

func (x *DishResourceRequestV1) GetResourceId() uint64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

var File_dishes_dishes_proto protoreflect.FileDescriptor

var file_dishes_dishes_proto_rawDesc = []byte{
	0x0a, 0x13, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2f, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d,
	0x0a, 0x0c, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x12, 0x13,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x55, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x22, 0x6a, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x31, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x22, 0x25, 0x0a, 0x0e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x56, 0x31, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03,
	0xba, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x68, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x12, 0x13, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x71, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x03, 0x71, 0x74,
	0x79, 0x22, 0xb0, 0x01, 0x0a, 0x06, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x12, 0x13, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0b, 0x69, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x73, 0x68, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x42,
	0x06, 0xba, 0x48, 0x03, 0xd0, 0x01, 0x01, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x1b, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x42, 0x06, 0xba, 0x48, 0x03, 0xd0,
	0x01, 0x01, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xbd, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x42, 0x06, 0xba, 0x48, 0x03, 0xd0,
	0x01, 0x01, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x1f, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x68, 0x49, 0x64, 0x56, 0x31, 0x12, 0x13, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x57, 0x0a, 0x08, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x31, 0x12, 0x13, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba,
	0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x56, 0x31, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03,
	0xba, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x64, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x56, 0x31, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x03, 0xba, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x21, 0x0a, 0x0a, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x56, 0x31, 0x12, 0x13,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x7a, 0x0a, 0x12, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x65, 0x65,
	0x6b, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x12, 0x24, 0x0a, 0x0b, 0x77, 0x65, 0x65,
	0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03,
	0xba, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x65, 0x65, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x06, 0x64, 0x69, 0x73, 0x68, 0x49, 0x64, 0x22,
	0x68, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x65, 0x65, 0x6b,
	0x6c, 0x79, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x31, 0x12, 0x24, 0x0a, 0x0b, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x0a, 0x77, 0x65, 0x65,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52,
	0x08, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x0a, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x31, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x74, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x56, 0x31, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x89, 0x01,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x03, 0xba, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x56, 0x31, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6b,
	0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x56, 0x31, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5b, 0x0a, 0x15, 0x44,
	0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x56, 0x31, 0x12, 0x1c, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x06, 0x64, 0x69, 0x73, 0x68,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x03, 0xba, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x32, 0xc7, 0x10, 0x0a, 0x0f, 0x44, 0x69, 0x73,
	0x68, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x12, 0x58, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x31, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x12, 0x28, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x56, 0x31, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x56, 0x31, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x22,
	0x00, 0x12, 0x4d, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69,
	0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x56, 0x31, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x31, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4c,
	0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x12, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x12, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69,
	0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x64, 0x56, 0x31,
	0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x64,
	0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x56, 0x31, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x50, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56,
	0x31, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x50, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x56, 0x31, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x56, 0x31, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x49, 0x64, 0x56, 0x31, 0x1a, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x56, 0x31, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56, 0x31, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x49, 0x64, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x56, 0x31,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x56,
	0x31, 0x22, 0x00, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x12, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x68, 0x56,
	0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x6c,
	0x79, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69,
	0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x65,
	0x65, 0x6b, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x56, 0x31, 0x12,
	0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x44,
	0x69, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x15,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x73, 0x68, 0x56, 0x31, 0x22, 0x00, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x31, 0x12, 0x26, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x54, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x56, 0x31, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x56, 0x31, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73,
	0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x56, 0x31, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x31, 0x12, 0x1b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x56, 0x31, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56,
	0x31, 0x22, 0x00, 0x30, 0x01, 0x12, 0x58, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x12,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x5a, 0x0a, 0x18, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x69, 0x73, 0x68, 0x56, 0x31, 0x12, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x31, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x56, 0x31, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x68, 0x49, 0x64, 0x56, 0x31, 0x1a, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x22, 0x00,
	0x30, 0x01, 0x42, 0xb3, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x64,
	0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x50, 0x6f, 0x6f, 0x72, 0x4d, 0x65, 0x72, 0x63, 0x79, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x45, 0x61, 0x74, 0x73, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x68, 0x65, 0x73, 0x3b, 0x64, 0x69, 0x73, 0x68,
	0x65, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x44, 0x58, 0xaa, 0x02, 0x0d, 0x41, 0x70, 0x69,
	0x2e, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x41, 0x70, 0x69,
	0x5c, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x41, 0x70, 0x69,
	0x5c, 0x44, 0x69, 0x73, 0x68, 0x65, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x44, 0x69,
	0x73, 0x68, 0x65, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dishes_dishes_proto_rawDescOnce sync.Once
	file_dishes_dishes_proto_rawDescData = file_dishes_dishes_proto_rawDesc
)

func file_dishes_dishes_proto_rawDescGZIP() []byte {
	file_dishes_dishes_proto_rawDescOnce.Do(func() {
		file_dishes_dishes_proto_rawDescData = protoimpl.X.CompressGZIP(file_dishes_dishes_proto_rawDescData)
	})
	return file_dishes_dishes_proto_rawDescData
}

var file_dishes_dishes_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_dishes_dishes_proto_goTypes = []interface{}{
	(*IngredientV1)(nil),                   // 0: api.dishes.v1.IngredientV1
	(*CreateIngredientRequestV1)(nil),      // 1: api.dishes.v1.CreateIngredientRequestV1
	(*UpdateIngredientRequestV1)(nil),      // 2: api.dishes.v1.UpdateIngredientRequestV1
	(*IngredientIdV1)(nil),                 // 3: api.dishes.v1.IngredientIdV1
	(*DishIngredientV1)(nil),               // 4: api.dishes.v1.DishIngredientV1
	(*DishV1)(nil),                         // 5: api.dishes.v1.DishV1
	(*CreateDishRequestV1)(nil),            // 6: api.dishes.v1.CreateDishRequestV1
	(*UpdateDishRequestV1)(nil),            // 7: api.dishes.v1.UpdateDishRequestV1
	(*DishIdV1)(nil),                       // 8: api.dishes.v1.DishIdV1
	(*BundleV1)(nil),                       // 9: api.dishes.v1.BundleV1
	(*CreateBundleRequestV1)(nil),          // 10: api.dishes.v1.CreateBundleRequestV1
	(*UpdateBundleRequestV1)(nil),          // 11: api.dishes.v1.UpdateBundleRequestV1
	(*BundleIdV1)(nil),                     // 12: api.dishes.v1.BundleIdV1
	(*BundleWeeklyDishV1)(nil),             // 13: api.dishes.v1.BundleWeeklyDishV1
	(*GetBundleWeeklyDishesRequestV1)(nil), // 14: api.dishes.v1.GetBundleWeeklyDishesRequestV1
	(*ResourceV1)(nil),                     // 15: api.dishes.v1.ResourceV1
	(*CreateResourceRequestV1)(nil),        // 16: api.dishes.v1.CreateResourceRequestV1
	(*UpdateResourceRequestV1)(nil),        // 17: api.dishes.v1.UpdateResourceRequestV1
	(*ResourceIdV1)(nil),                   // 18: api.dishes.v1.ResourceIdV1
	(*ResourceResponseV1)(nil),             // 19: api.dishes.v1.ResourceResponseV1
	(*DishResourceRequestV1)(nil),          // 20: api.dishes.v1.DishResourceRequestV1
	(*emptypb.Empty)(nil),                  // 21: google.protobuf.Empty
}
var file_dishes_dishes_proto_depIdxs = []int32{
	4,  // 0: api.dishes.v1.DishV1.ingredients:type_name -> api.dishes.v1.DishIngredientV1
	4,  // 1: api.dishes.v1.CreateDishRequestV1.ingredients:type_name -> api.dishes.v1.DishIngredientV1
	4,  // 2: api.dishes.v1.UpdateDishRequestV1.ingredients:type_name -> api.dishes.v1.DishIngredientV1
	1,  // 3: api.dishes.v1.DishesServiceV1.CreateIngredientV1:input_type -> api.dishes.v1.CreateIngredientRequestV1
	2,  // 4: api.dishes.v1.DishesServiceV1.UpdateIngredientV1:input_type -> api.dishes.v1.UpdateIngredientRequestV1
	3,  // 5: api.dishes.v1.DishesServiceV1.GetIngredientV1:input_type -> api.dishes.v1.IngredientIdV1
	3,  // 6: api.dishes.v1.DishesServiceV1.DeleteIngredientV1:input_type -> api.dishes.v1.IngredientIdV1
	21, // 7: api.dishes.v1.DishesServiceV1.ListIngredientsV1:input_type -> google.protobuf.Empty
	6,  // 8: api.dishes.v1.DishesServiceV1.CreateDishV1:input_type -> api.dishes.v1.CreateDishRequestV1
	7,  // 9: api.dishes.v1.DishesServiceV1.UpdateDishV1:input_type -> api.dishes.v1.UpdateDishRequestV1
	8,  // 10: api.dishes.v1.DishesServiceV1.GetDishV1:input_type -> api.dishes.v1.DishIdV1
	8,  // 11: api.dishes.v1.DishesServiceV1.DeleteDishV1:input_type -> api.dishes.v1.DishIdV1
	21, // 12: api.dishes.v1.DishesServiceV1.ListDishesV1:input_type -> google.protobuf.Empty
	10, // 13: api.dishes.v1.DishesServiceV1.CreateBundleV1:input_type -> api.dishes.v1.CreateBundleRequestV1
	11, // 14: api.dishes.v1.DishesServiceV1.UpdateBundleV1:input_type -> api.dishes.v1.UpdateBundleRequestV1
	12, // 15: api.dishes.v1.DishesServiceV1.GetBundleV1:input_type -> api.dishes.v1.BundleIdV1
	12, // 16: api.dishes.v1.DishesServiceV1.DeleteBundleV1:input_type -> api.dishes.v1.BundleIdV1
	21, // 17: api.dishes.v1.DishesServiceV1.ListBundlesV1:input_type -> google.protobuf.Empty
	13, // 18: api.dishes.v1.DishesServiceV1.AddBundleWeeklyDishV1:input_type -> api.dishes.v1.BundleWeeklyDishV1
	13, // 19: api.dishes.v1.DishesServiceV1.DeleteBundleWeeklyDishV1:input_type -> api.dishes.v1.BundleWeeklyDishV1
	14, // 20: api.dishes.v1.DishesServiceV1.GetBundleWeeklyDishesV1:input_type -> api.dishes.v1.GetBundleWeeklyDishesRequestV1
	16, // 21: api.dishes.v1.DishesServiceV1.CreateResourceV1:input_type -> api.dishes.v1.CreateResourceRequestV1
	17, // 22: api.dishes.v1.DishesServiceV1.UpdateResourceV1:input_type -> api.dishes.v1.UpdateResourceRequestV1
	18, // 23: api.dishes.v1.DishesServiceV1.GetResourceV1:input_type -> api.dishes.v1.ResourceIdV1
	18, // 24: api.dishes.v1.DishesServiceV1.DeleteResourceV1:input_type -> api.dishes.v1.ResourceIdV1
	21, // 25: api.dishes.v1.DishesServiceV1.ListResourcesV1:input_type -> google.protobuf.Empty
	20, // 26: api.dishes.v1.DishesServiceV1.AttachResourceToDishV1:input_type -> api.dishes.v1.DishResourceRequestV1
	20, // 27: api.dishes.v1.DishesServiceV1.DetachResourceFromDishV1:input_type -> api.dishes.v1.DishResourceRequestV1
	8,  // 28: api.dishes.v1.DishesServiceV1.ListDishResourcesV1:input_type -> api.dishes.v1.DishIdV1
	21, // 29: api.dishes.v1.DishesServiceV1.CreateIngredientV1:output_type -> google.protobuf.Empty
	21, // 30: api.dishes.v1.DishesServiceV1.UpdateIngredientV1:output_type -> google.protobuf.Empty
	0,  // 31: api.dishes.v1.DishesServiceV1.GetIngredientV1:output_type -> api.dishes.v1.IngredientV1
	21, // 32: api.dishes.v1.DishesServiceV1.DeleteIngredientV1:output_type -> google.protobuf.Empty
	0,  // 33: api.dishes.v1.DishesServiceV1.ListIngredientsV1:output_type -> api.dishes.v1.IngredientV1
	21, // 34: api.dishes.v1.DishesServiceV1.CreateDishV1:output_type -> google.protobuf.Empty
	21, // 35: api.dishes.v1.DishesServiceV1.UpdateDishV1:output_type -> google.protobuf.Empty
	5,  // 36: api.dishes.v1.DishesServiceV1.GetDishV1:output_type -> api.dishes.v1.DishV1
	21, // 37: api.dishes.v1.DishesServiceV1.DeleteDishV1:output_type -> google.protobuf.Empty
	5,  // 38: api.dishes.v1.DishesServiceV1.ListDishesV1:output_type -> api.dishes.v1.DishV1
	21, // 39: api.dishes.v1.DishesServiceV1.CreateBundleV1:output_type -> google.protobuf.Empty
	21, // 40: api.dishes.v1.DishesServiceV1.UpdateBundleV1:output_type -> google.protobuf.Empty
	9,  // 41: api.dishes.v1.DishesServiceV1.GetBundleV1:output_type -> api.dishes.v1.BundleV1
	21, // 42: api.dishes.v1.DishesServiceV1.DeleteBundleV1:output_type -> google.protobuf.Empty
	9,  // 43: api.dishes.v1.DishesServiceV1.ListBundlesV1:output_type -> api.dishes.v1.BundleV1
	21, // 44: api.dishes.v1.DishesServiceV1.AddBundleWeeklyDishV1:output_type -> google.protobuf.Empty
	21, // 45: api.dishes.v1.DishesServiceV1.DeleteBundleWeeklyDishV1:output_type -> google.protobuf.Empty
	5,  // 46: api.dishes.v1.DishesServiceV1.GetBundleWeeklyDishesV1:output_type -> api.dishes.v1.DishV1
	21, // 47: api.dishes.v1.DishesServiceV1.CreateResourceV1:output_type -> google.protobuf.Empty
	21, // 48: api.dishes.v1.DishesServiceV1.UpdateResourceV1:output_type -> google.protobuf.Empty
	19, // 49: api.dishes.v1.DishesServiceV1.GetResourceV1:output_type -> api.dishes.v1.ResourceResponseV1
	21, // 50: api.dishes.v1.DishesServiceV1.DeleteResourceV1:output_type -> google.protobuf.Empty
	19, // 51: api.dishes.v1.DishesServiceV1.ListResourcesV1:output_type -> api.dishes.v1.ResourceResponseV1
	21, // 52: api.dishes.v1.DishesServiceV1.AttachResourceToDishV1:output_type -> google.protobuf.Empty
	21, // 53: api.dishes.v1.DishesServiceV1.DetachResourceFromDishV1:output_type -> google.protobuf.Empty
	19, // 54: api.dishes.v1.DishesServiceV1.ListDishResourcesV1:output_type -> api.dishes.v1.ResourceResponseV1
	29, // [29:55] is the sub-list for method output_type
	3,  // [3:29] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_dishes_dishes_proto_init() }
func file_dishes_dishes_proto_init() {
	if File_dishes_dishes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dishes_dishes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngredientV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIngredientRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIngredientRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngredientIdV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishIngredientV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDishRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDishRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishIdV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BundleV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBundleRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBundleRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BundleIdV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BundleWeeklyDishV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBundleWeeklyDishesRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResourceRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResourceRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceIdV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceResponseV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dishes_dishes_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DishResourceRequestV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dishes_dishes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dishes_dishes_proto_goTypes,
		DependencyIndexes: file_dishes_dishes_proto_depIdxs,
		MessageInfos:      file_dishes_dishes_proto_msgTypes,
	}.Build()
	File_dishes_dishes_proto = out.File
	file_dishes_dishes_proto_rawDesc = nil
	file_dishes_dishes_proto_goTypes = nil
	file_dishes_dishes_proto_depIdxs = nil
}
